<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				currentState="Main"
				dataChange="dataChangeHandler(event)" 
				height.Main="25" height.Selected="55"
				addedToStage="addedToStageHandler(event)"
				removedFromStage="removedFromStageHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import net.twerno.eduClient.RO.pytanie.ZbiorPytan;
			import net.twerno.eduClient.RO.zadanie.Zadanie_ZbiorPytan;
			import net.twerno.eduClient.consts.Const;
			
			import pl.twerno.commLib.Images;
			import pl.twerno.eduClient.Env.Env;
			import pl.twerno.eduClient.panels.nauczyciel.NauczycielEvent;

			[Bindable]
			private var env:Env = Env.get;
			
			[Bindable]
			private var zzp:Zadanie_ZbiorPytan;

			protected function chBox_changeHandler(event:Event):void {
				if (chBox.selected) {
					zzp              = new Zadanie_ZbiorPytan();
					zzp.zadanie      = env.nauczycielEnv.wybraneZadanie;
					zzp.zbiorPytanId = (data as ZbiorPytan).id;
					env.nauczycielEnv.wybraneZadanie.zadanie_zbioryPytan.addItem(zzp);
					
					if (env.nauczycielEnv.wybraneZadanie.typWyboruPytan == Const.TYP_WYBORU_PYTAN_LOSOWO)
						currentState = 'Selected';
					else 
						currentState = 'Main';
				} else {
					env.nauczycielEnv.wybraneZadanie.del_zbiorPytan((data as ZbiorPytan).id);
					currentState = 'Main';
				}
				
				if (env.nauczycielEnv.wybraneZadanie.typWyboruPytan == Const.TYP_WYBORU_PYTAN_LOSOWO) {
					env.nauczycielEnv.wybraneZadanie.iloscPytan = 0;
					for each (var zzb:Zadanie_ZbiorPytan in env.nauczycielEnv.wybraneZadanie.zadanie_zbioryPytan)
						env.nauczycielEnv.wybraneZadanie.iloscPytan += zzb.iloscPytan;
					env.nauczycielEnv.wyliczMaxIloscPytan();	
				}
			}

			protected function dataChangeHandler(event:FlexEvent):void {
				if (data == null) return;
				if (env.nauczycielEnv.wybraneZadanie == null) return;
				var zp:ZbiorPytan = data as ZbiorPytan;
				zzp = env.nauczycielEnv.wybraneZadanie.get_zbiorPytan(zp.id);

				if (zzp != null) {
					chBox.selected = true;
					if (env.nauczycielEnv.wybraneZadanie.typWyboruPytan == Const.TYP_WYBORU_PYTAN_LOSOWO) {
						currentState   = 'Selected';
//						wyliczMaxIloscPytan();
					} else
						currentState   = 'Main';
				} else {
					chBox.selected = false;
					currentState   = 'Main';
				}
			}

			protected function addedToStageHandler(event:Event):void {
				env.addEventListener(NauczycielEvent.TYP_WYBORU_CHANGED, typ_wyboru_hanged);				
			}
			
			private function typ_wyboru_hanged(event:NauczycielEvent):void {
				dataChangeHandler(null);
			}

			protected function removedFromStageHandler(event:Event):void {
				env.removeEventListener(NauczycielEvent.TYP_WYBORU_CHANGED, typ_wyboru_hanged);	
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="Selected"/>
		<s:State name="Main"/>
	</s:states>

	<mx:Image y="4" left="5" width="16" height="16"
			  source="{Images.get().pluginImg}"/>
	<s:CheckBox id='chBox' top="0" height="25" left="25" right="5" 
				label="{(data as ZbiorPytan).opis
				        +' (' +(data as ZbiorPytan).przedmiot +')'
						+'  pytań w zbiorze:' +(data as ZbiorPytan).size}"
				change="chBox_changeHandler(event)"/>
	<s:NumericStepper id='iloscPytan' includeIn="Selected" y="27"
					  minimum="1" stepSize="1"
					  maximum='{(data as ZbiorPytan).size}'
					  value="@{zzp.iloscPytan}" right="5" left="120"/>
	<s:Label x="25" y="27" text="Pytań ze zbioru:" height="25" verticalAlign="middle" includeIn="Selected"/>
</s:ItemRenderer>
